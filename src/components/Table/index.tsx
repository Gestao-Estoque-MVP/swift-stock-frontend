
"use client"


import { MaterialReactTable } from 'material-react-table'
import { useEffect, useMemo, useRef, useState } from 'react'
import { type MRT_ColumnDef } from 'material-react-table'
import { MRT_Localization_PT } from 'material-react-table/locales/pt';



import ProductStatus from './ProductStatus'

type TableProps = {
    itens: any,
    state: string,
}

interface ITable {
    infor: object
    categoria: string
    entrada: string
    sku: string
    qtd: number
    stock: number
    estoque: string
}


const states = {
    "completo" : {color: "3026DC",bg:"DFEDF2"},
    "baixo": {color:"FFAB2D", bg:"rgba(255, 235, 204, 0.50)"},
    "vazio" : {color:"FF4A55",bg:"gba(255, 74, 85, 0.25)"},
    "medio" : {color:"36C633", bg:""},
  }
  
  




export const Table = ({ itens }: TableProps) => {
    const data: ITable[] = itens;
    const columns = useMemo<MRT_ColumnDef<ITable>[]>(
        () => [
            {
                header: "Nome",
                accessorKey: "infor",
                Cell: (value) => <div className="flex items-center gap-4 font-bold">
                    <img src={value.renderedCellValue.imageUrl} className="rounded-[14px]" alt="product" style={{ width: '49px', height: '49px' }} />
                    <h1>{value.renderedCellValue.name}</h1>
                </div>
            },
            {
                header: "Categoria",
                accessorKey: "categoria",
                Cell: (value) => <h1>{value.renderedCellValue}</h1>
            },
            {
                header: "SKU",
                accessorKey: "sku"
            },
            {
                header: "Entrada",
                accessorKey: "entrada"
            },
            {
                header: "Qtd.",
                accessorKey: "qtd"
            },
            {
                header: "Estoque",
                accessorKey: "estoque",

                Cell: (value) => <>
                    <ProductStatus state={value.renderedCellValue}> {value} </ProductStatus>
                </>
            }
        ],
        [],
    )


    const elementRef = useRef(null);

    const element = (
        <div ref={elementRef} className="max-w-full" >
            <p className='ml-[18px] text-3xl font-late' style={{ color: "var(--black, #202020)", fontWeight: "600" }}>Lista de produtos</p>
            <MaterialReactTable
      localization={MRT_Localization_PT}

                columns={columns}
                data={data}
                enableDensityToggle={false}
                enableFullScreenToggle={false}
                icons={{

                    SearchIcon: () => <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg" className='mx-[8px]'>
                        <g clip-path="url(#clip0_261_567)">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M7.875 2.99995C6.58207 2.99995 5.34209 3.51356 4.42785 4.4278C3.51361 5.34204 3 6.58202 3 7.87495C3 9.16788 3.51361 10.4079 4.42785 11.3221C5.34209 12.2363 6.58207 12.7499 7.875 12.7499C9.16793 12.7499 10.4079 12.2363 11.3221 11.3221C12.2364 10.4079 12.75 9.16788 12.75 7.87495C12.75 6.58202 12.2364 5.34204 11.3221 4.4278C10.4079 3.51356 9.16793 2.99995 7.875 2.99995ZM1.5 7.87495C1.50009 6.85839 1.74327 5.85659 2.20927 4.95314C2.67527 4.04968 3.35056 3.27077 4.17882 2.68137C5.00707 2.09198 5.96426 1.7092 6.97053 1.56498C7.97681 1.42075 9.00298 1.51926 9.96344 1.85228C10.9239 2.1853 11.7908 2.74318 12.4918 3.47937C13.1928 4.21557 13.7076 5.10872 13.9932 6.08433C14.2788 7.05994 14.327 8.0897 14.1337 9.08771C13.9404 10.0857 13.5112 11.023 12.882 11.8214L15.621 14.5604C15.7576 14.7019 15.8332 14.8913 15.8315 15.088C15.8298 15.2846 15.7509 15.4728 15.6119 15.6118C15.4728 15.7509 15.2847 15.8297 15.0881 15.8315C14.8914 15.8332 14.702 15.7576 14.5605 15.6209L11.8215 12.8819C10.8815 13.6229 9.7518 14.0843 8.56179 14.2133C7.37179 14.3422 6.16952 14.1335 5.09257 13.6111C4.01562 13.0887 3.10752 12.2736 2.47217 11.2592C1.83683 10.2447 1.49992 9.07192 1.5 7.87495ZM7.125 5.24995C7.125 5.05103 7.20402 4.86027 7.34467 4.71962C7.48532 4.57896 7.67609 4.49995 7.875 4.49995C8.77011 4.49995 9.62855 4.85553 10.2615 5.48846C10.8944 6.1214 11.25 6.97984 11.25 7.87495C11.25 8.07386 11.171 8.26462 11.0303 8.40528C10.8897 8.54593 10.6989 8.62495 10.5 8.62495C10.3011 8.62495 10.1103 8.54593 9.96967 8.40528C9.82902 8.26462 9.75 8.07386 9.75 7.87495C9.75 7.37767 9.55246 6.90075 9.20083 6.54912C8.84919 6.19749 8.37228 5.99995 7.875 5.99995C7.67609 5.99995 7.48532 5.92093 7.34467 5.78028C7.20402 5.63962 7.125 5.44886 7.125 5.24995Z" fill="gray" />
                        </g>
                        <defs>
                            <clipPath id="clip0_261_567">
                                <rect width="18" height="18" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>
                    ,
                    SearchOffIcon: () => <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg" className='mx-[8px]'>
                        <g clip-path="url(#clip0_261_567)">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M7.875 2.99995C6.58207 2.99995 5.34209 3.51356 4.42785 4.4278C3.51361 5.34204 3 6.58202 3 7.87495C3 9.16788 3.51361 10.4079 4.42785 11.3221C5.34209 12.2363 6.58207 12.7499 7.875 12.7499C9.16793 12.7499 10.4079 12.2363 11.3221 11.3221C12.2364 10.4079 12.75 9.16788 12.75 7.87495C12.75 6.58202 12.2364 5.34204 11.3221 4.4278C10.4079 3.51356 9.16793 2.99995 7.875 2.99995ZM1.5 7.87495C1.50009 6.85839 1.74327 5.85659 2.20927 4.95314C2.67527 4.04968 3.35056 3.27077 4.17882 2.68137C5.00707 2.09198 5.96426 1.7092 6.97053 1.56498C7.97681 1.42075 9.00298 1.51926 9.96344 1.85228C10.9239 2.1853 11.7908 2.74318 12.4918 3.47937C13.1928 4.21557 13.7076 5.10872 13.9932 6.08433C14.2788 7.05994 14.327 8.0897 14.1337 9.08771C13.9404 10.0857 13.5112 11.023 12.882 11.8214L15.621 14.5604C15.7576 14.7019 15.8332 14.8913 15.8315 15.088C15.8298 15.2846 15.7509 15.4728 15.6119 15.6118C15.4728 15.7509 15.2847 15.8297 15.0881 15.8315C14.8914 15.8332 14.702 15.7576 14.5605 15.6209L11.8215 12.8819C10.8815 13.6229 9.7518 14.0843 8.56179 14.2133C7.37179 14.3422 6.16952 14.1335 5.09257 13.6111C4.01562 13.0887 3.10752 12.2736 2.47217 11.2592C1.83683 10.2447 1.49992 9.07192 1.5 7.87495ZM7.125 5.24995C7.125 5.05103 7.20402 4.86027 7.34467 4.71962C7.48532 4.57896 7.67609 4.49995 7.875 4.49995C8.77011 4.49995 9.62855 4.85553 10.2615 5.48846C10.8944 6.1214 11.25 6.97984 11.25 7.87495C11.25 8.07386 11.171 8.26462 11.0303 8.40528C10.8897 8.54593 10.6989 8.62495 10.5 8.62495C10.3011 8.62495 10.1103 8.54593 9.96967 8.40528C9.82902 8.26462 9.75 8.07386 9.75 7.87495C9.75 7.37767 9.55246 6.90075 9.20083 6.54912C8.84919 6.19749 8.37228 5.99995 7.875 5.99995C7.67609 5.99995 7.48532 5.92093 7.34467 5.78028C7.20402 5.63962 7.125 5.44886 7.125 5.24995Z" fill="#3026DC" />
                        </g>
                        <defs>
                            <clipPath id="clip0_261_567">
                                <rect width="18" height="18" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>
                    ,


                    SortIcon: () => <svg width="13" height="8" viewBox="0 0 13 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M0.578696 1.68394C-0.0200533 1.04528 0.432792 0 1.30823 0H11.6918C12.5672 0 13.0201 1.04528 12.4213 1.68394L7.22954 7.22183C6.83446 7.64324 6.16554 7.64324 5.77046 7.22183L0.578696 1.68394Z" fill="#A5A5A5" />
                    </svg>
                    ,
                    FilterListIcon: () => <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g clip-path="url(#clip0_261_559)">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M3 6C3 5.197 3.437 4.552 3.965 4.084C4.495 3.615 5.203 3.238 5.992 2.942C7.578 2.347 9.702 2 12 2C14.297 2 16.422 2.347 18.008 2.942C18.798 3.238 19.506 3.615 20.035 4.084C20.562 4.552 21 5.197 21 6C21 10.644 18.13 14.652 14.11 15.724C14.0722 15.7334 14.038 15.754 14.012 15.783C14.003 15.793 14 15.8 14 15.8V19.805C13.9998 20.0837 13.9066 20.3543 13.735 20.5739C13.5634 20.7935 13.3234 20.9494 13.053 21.017L11.553 21.392C11.3688 21.438 11.1765 21.4415 10.9907 21.4021C10.805 21.3627 10.6306 21.2815 10.4809 21.1647C10.3313 21.0479 10.2101 20.8985 10.1268 20.7279C10.0435 20.5572 10.0001 20.3699 10 20.18V15.8C10 15.8 9.997 15.792 9.988 15.782C9.96179 15.7534 9.92769 15.7332 9.89 15.724C5.87 14.652 3 10.644 3 6ZM5 6C5 5.415 6.3 4.963 6.694 4.815C8.004 4.325 9.88 4 12 4C14.12 4 15.997 4.324 17.306 4.815C17.699 4.963 19 5.415 19 6C19 6.585 17.7 7.037 17.306 7.185C15.996 7.675 14.12 8 12 8C9.88 8 8.003 7.676 6.694 7.185C6.301 7.037 5 6.585 5 6Z" fill="gray" />
                        </g>
                        <defs>
                            <clipPath id="clip0_261_559">
                                <rect width="24" height="24" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>
                    ,
                    FilterListOffIcon: () => <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g clip-path="url(#clip0_261_559)">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M3 6C3 5.197 3.437 4.552 3.965 4.084C4.495 3.615 5.203 3.238 5.992 2.942C7.578 2.347 9.702 2 12 2C14.297 2 16.422 2.347 18.008 2.942C18.798 3.238 19.506 3.615 20.035 4.084C20.562 4.552 21 5.197 21 6C21 10.644 18.13 14.652 14.11 15.724C14.0722 15.7334 14.038 15.754 14.012 15.783C14.003 15.793 14 15.8 14 15.8V19.805C13.9998 20.0837 13.9066 20.3543 13.735 20.5739C13.5634 20.7935 13.3234 20.9494 13.053 21.017L11.553 21.392C11.3688 21.438 11.1765 21.4415 10.9907 21.4021C10.805 21.3627 10.6306 21.2815 10.4809 21.1647C10.3313 21.0479 10.2101 20.8985 10.1268 20.7279C10.0435 20.5572 10.0001 20.3699 10 20.18V15.8C10 15.8 9.997 15.792 9.988 15.782C9.96179 15.7534 9.92769 15.7332 9.89 15.724C5.87 14.652 3 10.644 3 6ZM5 6C5 5.415 6.3 4.963 6.694 4.815C8.004 4.325 9.88 4 12 4C14.12 4 15.997 4.324 17.306 4.815C17.699 4.963 19 5.415 19 6C19 6.585 17.7 7.037 17.306 7.185C15.996 7.675 14.12 8 12 8C9.88 8 8.003 7.676 6.694 7.185C6.301 7.037 5 6.585 5 6Z" fill="#3026DC" />
                        </g>
                        <defs>
                            <clipPath id="clip0_261_559">
                                <rect width="24" height="24" fill="white" />
                            </clipPath>
                        </defs>
                    </svg>,

                    ViewColumnIcon: () =>
                        <svg width="13" height="8" viewBox="0 0 13 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M0.578696 1.68394C-0.0200533 1.04528 0.432792 0 1.30823 0H11.6918C12.5672 0 13.0201 1.04528 12.4213 1.68394L7.22954 7.22183C6.83446 7.64324 6.16554 7.64324 5.77046 7.22183L0.578696 1.68394Z" fill="#A5A5A5" />
                        </svg>





                }}

            />

        </div>

    )








    return element
}




const style = {
    "MuiInputBase-input": {
        backgroundColor: "blue"
    }
}
